steps:
  - command: |
        echo "--- :hammer: Building with sanitizers" && \
        /usr/bin/cmake -GNinja -DCMAKE_BUILD_TYPE=Debug -DCMAKE_CXX_COMPILER=clang++-4.0 -DCMAKE_C_COMPILER=clang-4.0 -DBOOST_ROOT="${BOOST_ROOT}" -DWASM_ROOT="${WASM_ROOT}" -DOPENSSL_ROOT_DIR="${OPENSSL_ROOT_DIR}" -DBUILD_MONGO_DB_PLUGIN=true -DENABLE_COVERAGE_TESTING=true -DBUILD_DOXYGEN=false -DCMAKE_CXX_FLAGS="-fsanitize-recover=leak -g" -DCMAKE_C_FLAGS="-fsanitize-recover=leak -g" -DCMAKE_EXE_LINKER_FLAGS="-fsanitize-recover=leak -pthread" -DCMAKE_MODULE_LINKER_FLAGS="-fsanitize-recover=leak -pthread" && \
        /usr/bin/ninja | tee sanitizer_output.log
    label: ":spiral_note_pad: Generate Report"
    agents:
      - "role=automation-builder-large"
    artifact_paths:
      - "sanitizer_output.txt"
    plugins:
      docker#v1.4.0:
        image: "eosio/ci:ubuntu18"
        command: ["--privileged"]
        workdir: /data/job
        mounts:
          - /etc/buildkite-agent/config:/config
        environment:
          - BOOST_ROOT=/root/opt/boost
          - OPENSSL_ROOT_DIR=/usr/include/openssl
          - WASM_ROOT=/root/opt/wasm
          - PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/root/opt/wasm/bin
          - CI=true
          - ASAN_OPTIONS=fast_unwind_on_malloc=0
    timeout: 60
