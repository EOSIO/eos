steps:
  - command: |
        echo "--- :hammer: Building with Memory Sanitizer" && \
        /usr/bin/cmake -GNinja -DCMAKE_BUILD_TYPE=Debug -DCMAKE_CXX_COMPILER=clang++-4.0 -Wall -Werror \
        -DCMAKE_C_COMPILER=clang-4.0 -DBOOST_ROOT="${BOOST_ROOT}" \
        -DWASM_ROOT="${WASM_ROOT}" -DOPENSSL_ROOT_DIR="${OPENSSL_ROOT_DIR}" \
        -DBUILD_MONGO_DB_PLUGIN=true \
        -DENABLE_COVERAGE_TESTING=true \
        -DBUILD_DOXYGEN=false \
        -DCMAKE_CXX_FLAGS="-fsanitize=memory -fsanitize-memory-track-origins -fsanitize-recover=all -g" \
        -DCMAKE_C_FLAGS="-fsanitize=memory -fsanitize-memory-track-origins  -fsanitize-recover=all -g" \
        -DCMAKE_EXE_LINKER_FLAGS="-fsanitize=memory -fsanitize-memory-track-origins  -fsanitize-recover=all  -pthread" \
        -DCMAKE_MODULE_LINKER_FLAGS="-fsanitize=memory -fsanitize-memory-track-origins  -fsanitize-recover=all -pthread" && \
        /usr/bin/ninja && \
        echo "--- :compression: Compressing build directory" && \
        tar -pczf ../build.tar.gz build/
        echo "--- :beers: Done"
    label: ":_: Memory Sanitizer"
    agents:
      - "role=automation-builder-large"
    artifact_paths:
      - "build.tar.gz"
    plugins:
      docker#v1.4.0:
        image: "eosio/ci:ubuntu18"
        command: ["--privileged"]
        workdir: /data/job
        mounts:
          - /etc/buildkite-agent/config:/config
        environment:
          - BOOST_ROOT=/root/opt/boost
          - OPENSSL_ROOT_DIR=/usr/include/openssl
          - WASM_ROOT=/root/opt/wasm
          - PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/root/opt/wasm/bin
          - CI=true
          - ASAN_OPTIONS=fast_unwind_on_malloc=0
          - MSAN_SYMBOLIZER_PATH=/usr/lib/llvm-4.0/bin/llvm-symbolizer
    timeout: 60

  - wait

  - command: |
        echo "--- :arrow_down: Downloading build directory" && \
        buildkite-agent artifact download "build.tar.gz" . --step ":_: Memory Sanitizer" && \
        tar -zxf build.tar.gz && \
        echo "--- :m: Starting MongoDB" && \
        $(which mongod) --fork --logpath "$(pwd)"/mongod.log && \
        echo "+++ :microscope: Running tests" && \
        ln -s "$(pwd)" /data/job && cd /data/job/build && ctest -j8 -LE _tests --output-on-failure | tee sanitizer.log
    retry:
      automatic:
        limit: 1
    label: ":_: Memory Sanitizer Tests"
    agents:
      - "role=automation-builder-large"
    artifact_paths:
      - "mongod.log"
      - "build/genesis.json"
      - "build/config.ini"
      - "sanitizer.log"
    timeout: 60