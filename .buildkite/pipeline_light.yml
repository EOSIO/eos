steps:
    
  - command: |
        echo "+++ :hammer: Building" && \
        echo 1 | ./eosio_build.sh && \
        echo "--- :compression: Compressing build directory" && \
        tar -pczf build.tar.gz build/
    label: ":ubuntu: 18.04 Build"
    agents:
      queue: "automation-large-builder-fleet"
    artifact_paths: "build.tar.gz"
    plugins:
      docker#v1.4.0:
        image: "eosio/ci:ubuntu18"
        workdir: /data/job
    timeout: 60

  - wait

  - command: |
        echo "--- :arrow_down: Downloading build directory" && \
        buildkite-agent artifact download "build.tar.gz" . --step ":ubuntu: 18.04 Build" && \
        tar -zxf build.tar.gz && \
        echo "--- :m: Starting MongoDB" && \
        $(which mongod) --fork --logpath "$(pwd)"/mongod.log && \
        echo "+++ :microscope: Running tests" && \
        cd /data/job/build && ctest -j8 -LE _tests --output-on-failure
    label: ":ubuntu: 18.04 Tests"
    agents:
      queue: "automation-large-builder-fleet"
    artifact_paths:
      - "mongod.log"
      - "build/genesis.json"
      - "build/config.ini"
    plugins:
      docker#v1.4.0:
        image: "eosio/ci:ubuntu18"
        workdir: /data/job
    timeout: 60

  - command: |
        echo "--- :arrow_down: Downloading build directory" && \
        buildkite-agent artifact download "build.tar.gz" . --step ":ubuntu: 18.04 Build" && \
        tar -zxf build.tar.gz && \
        echo "--- :m: Starting MongoDB" && \
        $(which mongod) --fork --logpath "$(pwd)"/mongod.log && \
        echo "+++ :microscope: Running tests" && \
        cd /data/job/build && ctest -L nonparallelizable_tests --output-on-failure
    label: ":ubuntu: 18.04 NP Tests"
    agents:
      queue: "automation-large-builder-fleet"
    artifact_paths:
      - "mongod.log"
      - "build/genesis.json"
      - "build/config.ini"
    plugins:
      docker#v1.4.0:
        image: "eosio/ci:ubuntu18"
        workdir: /data/job
    timeout: 60

  - wait

  - command: |
        echo "--- :arrow_down: Downloading build directory" && \
        buildkite-agent artifact download "build.tar.gz" . --step ":ubuntu: 18.04 Build" && \
        tar -zxf build.tar.gz && \
        echo "+++ :microscope: Starting package build" && \
        cd /data/job/build/packages && bash generate_package.sh deb
    label: ":ubuntu: 18.04 Package builder"
    agents:
      queue: "automation-large-builder-fleet"
    artifact_paths:
      - "build/packages/*.deb"
    plugins:
      docker#v1.4.0:
        image: "eosio/ci:ubuntu18"
        workdir: /data/job
    env:
      OS: "ubuntu-18.04"
      PKGTYPE: "deb"
    timeout: 60
