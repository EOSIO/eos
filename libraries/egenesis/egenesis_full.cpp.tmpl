${generated_file_banner}
/*
 * Copyright (c) 2015, Cryptonomex, Inc.
 * All rights reserved.
 *
 * This source code is provided for evaluation in private test networks only, until September 8, 2015. After this date, this license expires and
 * the code may not be used, modified or distributed for any purpose. Redistribution and use in source and binary forms, with or without modification,
 * are permitted until September 8, 2015, provided that the following conditions are met:
 *
 * 1. The code and/or derivative works are used only for private test networks consisting of no more than 10 P2P nodes.
 *
 * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO,
 * THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR
 * CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,
 * PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,
 * WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF
 * ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
 */

#include <eos/chain/types.hpp>
#include <eos/egenesis/egenesis.hpp>

namespace eosio { namespace egenesis {

using namespace eosio::chain;

static const char genesis_json_array[${genesis_json_array_height}$][${genesis_json_array_width}$+1] =
{
${genesis_json_array}$
};

chain_id_type get_egenesis_chain_id()
{
   return chain_id_type( "${chain_id}$" );
}

void compute_egenesis_json( std::string& result )
{
   result.reserve( ${genesis_json_length}$ );
   result.resize(0);
   for( size_t i=0; i<${genesis_json_array_height}$-1; i++ )
   {
      result.append( genesis_json_array[i], ${genesis_json_array_width}$ );
   }
   result.append( std::string( genesis_json_array[ ${genesis_json_array_height}$-1 ] ) );
   return;
}

fc::sha256 get_egenesis_json_hash()
{
   return fc::sha256( "${genesis_json_hash}" );
}

} }
