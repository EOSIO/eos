steps:
  - wait

  - trigger: "eosio-base-images-beta"
    label: ":docker: Ensure Base Images"
    build:
      commit: "${BUILDKITE_COMMIT}"
      branch: "${BUILDKITE_BRANCH}"
      
  - wait

  - label: ":aws: Amazon_Linux 2.0 - Build & Test"
    agents:
      queue: "automation-eos-builder-fleet"
    plugins:
      - docker#v3.2.0:
          debug: $DEBUG
          image: "eosio/producer:eosio-amazonlinux-2-d89cfcba2c5002f7c79e5f2ea07d9f514b960fcd"
          environment:
            - "BUILDKITE_AGENT_ACCESS_TOKEN" # Needed for buildkite-agent upload/download
            - "JOBS" # Number for -j make/ctest args.
          mount-buildkite-agent: false # Mounting bk-agent doesn't work, so disable it
          propagate-environment: true # Need for buildkite-agent upload/download (JOB_ID, etc)

  - label: ":centos: CentOS 7.6 - Build & Test"
    command:
      - ""
    agents:
      queue: "automation-eos-builder-fleet"
    plugins:
      - docker#v3.2.0:
          debug: true
          image: "eosio/producer:eosio-centos-7.6-8837beff70f9bb04717630bdeb3a29ff984ae985"
          environment:
            # - "ENABLE_LR_TESTS=true"
            - "BUILDKITE_AGENT_ACCESS_TOKEN" # Needed for buildkite-agent upload/download
            - "JOBS" # Number for -j make/ctest args.
          mount-buildkite-agent: false # Mounting bk-agent doesn't work, so disable it
          propagate-environment: true # Need for buildkite-agent upload/download (JOB_ID, etc)

  - label: ":ubuntu: Ubuntu 16.04 - Build & Test"
    agents:
      queue: "automation-eos-builder-fleet"
    plugins:
      - docker#v3.2.0:
          debug: $DEBUG
          image: "eosio/producer:eosio-ubuntu-16.04-a86f678994109fd09a13468f9b8f5ebf10b48a6b"
          environment:
            - "BUILDKITE_AGENT_ACCESS_TOKEN" # Needed for buildkite-agent upload/download
            - "JOBS" # Number for -j make/ctest args.
          mount-buildkite-agent: false # Mounting bk-agent doesn't work, so disable it
          propagate-environment: true # Need for buildkite-agent upload/download (JOB_ID, etc)

  - label: ":ubuntu: Ubuntu 18.04 - Build & Test"
    agents:
      queue: "automation-eos-builder-fleet"
    plugins:
      - docker#v3.2.0:
          debug: $DEBUG
          image: "eosio/producer:eosio-ubuntu-18.04-d1248048f40158965ff9876c0c21ac728bb82da6"
          environment:
            - "BUILDKITE_AGENT_ACCESS_TOKEN" # Needed for buildkite-agent upload/download
            - "JOBS" # Number for -j make/ctest args.
          mount-buildkite-agent: false # Mounting bk-agent doesn't work, so disable it
          propagate-environment: true # Need for buildkite-agent upload/download (JOB_ID, etc)

  - label: ":darwin: macOS 10.14 - Build & Test"
    command:
      - "brew install git graphviz libtool gmp llvm@4 pkgconfig python python@2 doxygen libusb openssl boost@1.70 cmake mongodb"
      - "git clone $BUILDKITE_REPO eos && cd eos && git checkout $BUILDKITE_COMMIT && git submodule update --init --recursive"
      - "cd eos && mkdir -p build && cd build && cmake .."
      - "cd eos/build && make -j$(getconf _NPROCESSORS_ONLN)"
      - "if ${ENABLE_PARALLEL_TESTS:-true}; then cd eos/build && ctest -j$(getconf _NPROCESSORS_ONLN) -LE _tests --output-on-failure -T Test; fi"
      - "if ${ENABLE_SERIAL_TESTS:-true}; then cd eos/build && mkdir -p ./mongodb && mongod --dbpath ./mongodb --fork --logpath mongod.log && ctest -L nonparallelizable_tests --output-on-failure -T Test; fi"
      - "if ${ENABLE_LR_TESTS:-false}; then cd eos/build && ctest -L long_running_tests --output-on-failure -T Test; fi"
      - "cd eos && echo $(pkill mongod || :) && tar -pczf build.tar.gz build && buildkite-agent artifact upload build.tar.gz"
    plugins:
      - chef/anka#v0.5.1:
          no-volume: true
          inherit-environment-vars: true
          vm-name: 10.14.4_6C_14G_40G
          vm-registry-tag: "clean::cicd::git-ssh::nas::brew::buildkite-agent"
          modify-cpu: 12
          modify-ram: 24
          always-pull: true
          debug: true
          wait-network: true
    agents:
      - "queue=mac-anka-large-node-fleet"

  - wait:
    continue_on_failure: true

  - command: |
      echo '+++ :compression: Extracting Test Metrics Code'
      tar -zxf .cicd/metrics/test-metrics.tar.gz
      echo '+++ :javascript: Running test-metrics.js'
      node --max-old-space-size=32768 test-metrics.js
    label: ":bar_chart: Test Metrics"
    agents:
      queue: "automation-eos-builder-fleet"
    timeout: 10
    soft_fail: true
  
  - trigger: "eosio-dot-contracts-base-images-beta"
    label: ":docker: Create eosio.contracts Base Image"
    build:
      commit: "${BUILDKITE_COMMIT}"
      branch: "${BUILDKITE_BRANCH}"
      env:
        FORCE_BINARIES_BUILD: "${FORCE_BINARIES_BUILD}"
    async: true

  - wait

  - label: ":centos: Centos 7.6 - Package Builder"
    command:
      - "cd /workdir && buildkite-agent artifact download build.tar.gz . --step ':centos: CentOS 7.6 - Build & Test' --agent-access-token $$BUILDKITE_AGENT_ACCESS_TOKEN && tar -xzf build.tar.gz"
      - "./.cicd/package-builder.sh"
    plugins:
      - docker#v3.2.0:
          debug: true
          image: "eosio/producer:eosio-centos-7.6-8837beff70f9bb04717630bdeb3a29ff984ae985"
          environment:
            - "BUILDKITE_AGENT_ACCESS_TOKEN" # Needed for buildkite-agent upload/download
          mount-buildkite-agent: false # Mounting bk-agent doesn't work, so disable it
          propagate-environment: true # Need for buildkite-agent upload/download (JOB_ID, etc)
    agents:
      queue: "automation-eos-builder-fleet"
    timeout: 10

  - label: ":ubuntu: Ubuntu 16.04 - Package Builder"
    command:
      - "cd /workdir && buildkite-agent artifact download build.tar.gz . --step ':ubuntu: Ubuntu 16.04 - Build & Test' --agent-access-token $$BUILDKITE_AGENT_ACCESS_TOKEN && tar -xzf build.tar.gz"
      - "./.cicd/package-builder.sh"
    plugins:
      - docker#v3.2.0:
          debug: $DEBUG
          image: "eosio/producer:eosio-ubuntu-16.04-a86f678994109fd09a13468f9b8f5ebf10b48a6b"
          environment:
            - "BUILDKITE_AGENT_ACCESS_TOKEN" # Needed for buildkite-agent upload/download
          mount-buildkite-agent: false # Mounting bk-agent doesn't work, so disable it
          propagate-environment: true # Need for buildkite-agent upload/download (JOB_ID, etc)
    agents:
      queue: "automation-eos-builder-fleet"
    timeout: 10

  - label: ":ubuntu: Ubuntu 18.04 - Package Builder"
    command:
      - "cd /workdir && buildkite-agent artifact download build.tar.gz . --step ':ubuntu: Ubuntu 18.04 - Build & Test' --agent-access-token $$BUILDKITE_AGENT_ACCESS_TOKEN && tar -xzf build.tar.gz"
      - "./.cicd/package-builder.sh"
    plugins:
      - docker#v3.2.0:
          debug: $DEBUG
          image: "eosio/producer:eosio-ubuntu-18.04-d1248048f40158965ff9876c0c21ac728bb82da6"
          environment:
            - "BUILDKITE_AGENT_ACCESS_TOKEN" # Needed for buildkite-agent upload/download
          mount-buildkite-agent: false # Mounting bk-agent doesn't work, so disable it
          propagate-environment: true # Need for buildkite-agent upload/download (JOB_ID, etc)
    agents:
      queue: "automation-eos-builder-fleet"
    timeout: 10

  - label: ":darwin: Mojave - Package Builder"
    command:
      - "git clone $BUILDKITE_REPO eos && cd eos && git checkout $BUILDKITE_COMMIT"
      - "cd eos && buildkite-agent artifact download build.tar.gz . --step ':darwin: macOS 10.14 - Build & Test' && tar -xzf build.tar.gz"
      - "cd eos && ./.cicd/package-builder.sh"
    plugins:
      - chef/anka#v0.5.1:
          no-volume: true
          inherit-environment-vars: true
          vm-name: 10.14.4_6C_14G_40G
          vm-registry-tag: "clean::cicd::git-ssh::nas::brew::buildkite-agent"
          always-pull: true
          debug: true
          wait-network: true
    agents:
      - "queue=mac-anka-node-fleet"
    timeout: 10

  - label: ":git: Git Submodule Regression Check"
    command:
      - "./.cicd/submodule-regression-checker.sh"
    agents:
      queue: "automation-basic-builder-fleet"
    timeout: 5